体验概率情况(><=)：原因是服务层有sql优化器，所以优化器可能会干扰我们的优化。

	show index from book;
	drop index idx_authorid on book;
	drop index idx_cateid on book;
	alter table book add indx idx_ac(authorid,cateid);
	explain select * from book where authorid=1 and cateid=2;		复合索引全部使用了
	+----+-------------+-------+------+---------------+--------+---------+-------------+------+-------+
	| id | select_type | table | type | possible_keys | key    | key_len | ref         | rows | Extra |
	+----+-------------+-------+------+---------------+--------+---------+-------------+------+-------+
	|  1 | SIMPLE      | book  | ref  | idx_ac        | idx_ac | 8       | const,const |    1 |       |
	+----+-------------+-------+------+---------------+--------+---------+-------------+------+-------+
	explain select * from book where authorid>1 and cateid=2;
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	|  1 | SIMPLE      | book  | ALL  | idx_ac        | NULL | NULL    | NULL |    5 | Using where |
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	复合索引如果有大于号，则自身和右侧索引全部失效
	
	explain select * from book where authorid=1 and cateid>2;
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra       |
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	|  1 | SIMPLE      | book  | range | idx_ac        | idx_ac | 8       | NULL |    1 | Using where |
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	概率情况，复合索引全部使用了
	explain select * from book where authorid<1 and cateid=2;
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	| id | select_type | table | type  | possible_keys | key    | key_len | ref  | rows | Extra       |
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	|  1 | SIMPLE      | book  | range | idx_ac        | idx_ac | 4       | NULL |    1 | Using where |
	+----+-------------+-------+-------+---------------+--------+---------+------+------+-------------+
	复合索引中只用了一个索引
	explain select * from book where authorid<4 and cateid=2;
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra       |
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	|  1 | SIMPLE      | book  | ALL  | idx_ac        | NULL | NULL    | NULL |    5 | Using where |
	+----+-------------+-------+------+---------------+------+---------+------+------+-------------+
	全部失效
	索引优化是一个大部分都适用的结论，但是由于sql优化器等原因，该结论不是100%正确。
	一般而言，范围查询(< > in)，之后的所有失效
	
(4)补救。尽量使用索引覆盖(using index)
	(a,b,c)	select a,b,c from xxx ... where a=... and b=...
	
(5)like尽量以常量开头，不要以'%'开头，否则索引失效
	select * from xx where name like '%x%;		如果name是索引，name失效
	explain select * from teacher where name like '%x%';
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	| id | select_type | table   | type | possible_keys | key  | key_len | ref  | rows | Extra       |
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	|  1 | SIMPLE      | teacher | ALL  | NULL          | NULL | NULL    | NULL |    5 | Using where |
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	explain select * from teacher where name like 'x%';
	+----+-------------+---------+-------+---------------+------------+---------+------+------+-------------+
	| id | select_type | table   | type  | possible_keys | key        | key_len | ref  | rows | Extra       |
	+----+-------------+---------+-------+---------------+------------+---------+------+------+-------------+
	|  1 | SIMPLE      | teacher | range | name_index    | name_index | 63      | NULL |    1 | Using where |
	+----+-------------+---------+-------+---------------+------------+---------+------+------+-------------+
	explain select name from teacher where name like '%x%';
	+----+-------------+---------+-------+---------------+------------+---------+------+------+--------------------------+
	| id | select_type | table   | type  | possible_keys | key        | key_len | ref  | rows | Extra                    |
	+----+-------------+---------+-------+---------------+------------+---------+------+------+--------------------------+
	|  1 | SIMPLE      | teacher | index | NULL          | name_index | 63      | NULL |    5 | Using where; Using index |
	+----+-------------+---------+-------+---------------+------------+---------+------+------+--------------------------+
	索引覆盖可以一定程度的解决这个问题(%开头)
	如果必须使用 like '%x%' 可以使用索引覆盖，挽救一部分
(6)尽量不要使用类型转换(显式、隐式)，否则索引失效
	select * from teacher where name='abc';
	explain select name from teacher where name='abc';
	+----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+
	| id | select_type | table   | type | possible_keys | key        | key_len | ref   | rows | Extra                    |
	+----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+
	|  1 | SIMPLE      | teacher | ref  | name_index    | name_index | 63      | const |    1 | Using where; Using index |
	+----+-------------+---------+------+---------------+------------+---------+-------+------+--------------------------+
	explain select * from teacher where name=123;
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	| id | select_type | table   | type | possible_keys | key  | key_len | ref  | rows | Extra       |
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	|  1 | SIMPLE      | teacher | ALL  | name_index    | NULL | NULL    | NULL |    5 | Using where |
	+----+-------------+---------+------+---------------+------+---------+------+------+-------------+
	程序底层将123转换成'123'，即进行了类型转换，索引失效
	
(7)尽量不要使用or，否则索引失效
	explain select * from teacher where name='abc' and tcid>1;
	+----+-------------+---------+------+--------------------+------------+---------+-------+------+-------------+
	| id | select_type | table   | type | possible_keys      | key        | key_len | ref   | rows | Extra       |
	+----+-------------+---------+------+--------------------+------------+---------+-------+------+-------------+
	|  1 | SIMPLE      | teacher | ref  | uk_tcid,name_index | name_index | 63      | const |    1 | Using where |
	+----+-------------+---------+------+--------------------+------------+---------+-------+------+-------------+
	explain select * from teacher where name='abc' or tcid>1;
	+----+-------------+---------+------+--------------------+------+---------+------+------+-------------+
	| id | select_type | table   | type | possible_keys      | key  | key_len | ref  | rows | Extra       |
	+----+-------------+---------+------+--------------------+------+---------+------+------+-------------+
	|  1 | SIMPLE      | teacher | ALL  | uk_tcid,name_index | NULL | NULL    | NULL |    5 | Using where |
	+----+-------------+---------+------+--------------------+------+---------+------+------+-------------+
	or很强大，可以将左侧的索引干掉

	
	
	
	
	
	
	
	
	
	